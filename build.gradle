plugins {
    id "com.github.hierynomus.license" version "0.14.0"
    id 'io.codearte.nexus-staging' version '0.9.0'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'de.roamingthings'
archivesBaseName = "persistence-support"
version = '1.0.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
	mavenCentral()
    mavenLocal()
    maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
/*
    // This is just to trick IntelliJ IDEA to add integration test
    // resources to classpath when running integration tests from
    // the IDE. It's is not a good solution but I don't know about
    // a better one.
    test {
        resources.srcDir file('src/integration-test/resources')
    }
*/
    test.resources.srcDirs += main.resources.srcDirs
    integrationTest.resources.srcDirs += file('src/main/resources')
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    compileOnly 'javax:javaee-api:7.0'

    testCompile group: 'org.hibernate', name: 'hibernate-core', version: '5.2.10.Final'
    testCompile 'org.apache.derby:derby:10.11.1.1'
    testCompile 'junit:junit:4.12'
    testCompile('de.roamingthings.junit-rules:rules-jpa:1.0.0-SNAPSHOT')

    integrationTestCompile 'javax:javaee-api:7.0'
}

test {
    systemProperty("spring.profiles.active", project.properties.get("springTestProfile")?:'test')

    testLogging {
        showStandardStreams = false
        events "passed", "skipped", "failed"
    }
}

task integrationTest(type: Test) {
    def profile = project.properties.get("springTestProfile") ?: 'it'
    println "Integrationtest will use Spring profile ${profile}"
    systemProperty("spring.profiles.active", profile)

    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
//    outputs.upToDateWhen { false }
    testLogging {
        events "passed", "skipped", "failed"
    }
}


license {
    header file('doc/APL.txt')
    include "**/*.java"
    exclude "**/*Test*.java"
    exclude "**/*IT.java"
}
licenseMain.dependsOn licenseFormat

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Persistence Support Library'
                packaging 'jar'
                description 'Library to support persitence related tasks used by various projects.'
                url 'https://github.com/roamingthings/persistence-support'

                scm {
                    connection 'scm:git@github.com:roamingthings/persistence-support.git'
                    developerConnection 'scm:git@github.com:roamingthings/persistence-support.git'
                    url 'scm:git@github.com:roamingthings/persistence-support.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'roamingthings'
                        name 'Alexander Sparkowsky'
                        email 'info@roamingthings.de'
                    }
                }
            }
        }
    }
}
uploadArchives.dependsOn licenseMain
